name: Ubuntu Launchpad Build
on:
  push:
    branches:
    - master

jobs:
  push-to-ppa:

    name: Submit build to Ubuntu Launchpad
    runs-on: ubuntu-latest

    steps:
    - name: Check out sources
      uses: actions/checkout@v1

    - name: atomically create or retrieve the build number
      id: version_number
      if: github.event_name == 'push'
      run: |
        cd .. # check out parallel to subsurface sources
        url="https://subsurface:${{ secrets.NIGHTLY_BUILDS }}@github.com/subsurface/nightly-builds"
        # the clone followed by the pointless push should verify that the password is stored in the config
        # that way the script doesn't need the password
        git clone -b main https://github.com/subsurface/nightly-builds
        cd nightly-builds
        git remote set-url origin "$url"
        git push origin main
        cd ..
        bash -x subsurface/scripts/get-or-create-build-nr.sh ${{ github.sha }}
        cp nightly-builds/latest-subsurface-buildnumber subsurface
        echo "CICD-release" > subsurface/latest-subsurface-buildnumber-extension
        version=$(bash subsurface/scripts/get-version)
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Setup build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y devscripts dput gpg debhelper qt5-qmake cmake

    - name: Setup gpg key token for launchpad
      env:
        GPG_PRIVATE_KEY: ${{ secrets.PPA_SECRET_KEY }}
      run: |
        echo "$GPG_PRIVATE_KEY" > ~/.key
        gpg --import ~/.key

    - name: setup git
      run: |
        git config --global --add safe.directory /__w/subsurface/subsurface
        git config --global --add safe.directory /__w/subsurface/subsurface/libdivecomputer

    - name: Checkout googlemaps
      run: |
        cd ..
        git clone https://github.com/subsurface/googlemaps

    - name: run the launchpad make-package script
      run: |
        cd ..
        bash -x subsurface/packaging/ubuntu/make-package.sh post

