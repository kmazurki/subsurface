name: Windows
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  buildWindows:
    runs-on: ubuntu-latest
    container:
      image: docker://subsurface/mxe-build-container:3.0.1

    steps:
    - name: checkout sources
      uses: actions/checkout@v1

    - name: atomically create or retrieve the build number
      id: build_nr
      run: |
        export tag=""
        export is_latest=false
        if [ "${{ github.ref_type }}" = "tag" ]
        then
          tag="${{ github.ref_name }}"
        else
          tag="latest"
          is_latest=true
        fi
        echo "tag=${tag}" >> $GITHUB_OUTPUT
        echo "is_latest=${is_latest}" >> $GITHUB_OUTPUT

    - name: get other dependencies
      env:
         SUBSURFACE_REPO_PATH: ${{ github.workspace }}
      run: |
        echo "Running script to install additional dependancies into container"
        git config --global --add safe.directory ${SUBSURFACE_REPO_PATH}
        git config --global --add safe.directory ${SUBSURFACE_REPO_PATH}/libdivecomputer
        cd /win
        ln -s /__w/subsurface/subsurface .
        bash -x subsurface/.github/workflows/scripts/windows-container-prep.sh 2>&1 | tee pre-build.log

    - name: run build
      run: |
        cd /win
        bash -x subsurface/.github/workflows/scripts/windows-in-container-build.sh 2>&1 | tee build.log
        grep "Built target installer" build.log

    - name: create version number
      id: version_number
      if: github.event_name == 'push'
      run: |
        latest=$(cat ../nightly-builds/latest-subsurface-buildnumber)
        today=$(date '+%Y-%m-%d')
        version="$today.$latest"
        echo "version=$version" >> $GITHUB_OUTPUT

    # only publish a 'release' on push events (those include merging a PR)
    - name: upload binaries
      if: github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version_number.outputs.version }}
        repository: subsurface/nightly-builds
        token: ${{ secrets.NIGHTLY_BUILDS }}
        prerelease: false
        fail_on_unmatched_files: true
        files: |
         ./subsurface*.exe*
         ./smtk2ssrf*.exe
        body: |
          CICD release artifact

          These builds are created on every merge or push into the [Subsurface repo](http://github.com/subsurface/subsurface).
          This build is based on http://github.com/subsurface/subsurface/commit/${{ github.sha }}

          None of these artifacts are signed.
          The Android APK can be side-loaded on most Android devices. If you had a previous Subsurface-mobile version installed from the Google Play store, you'll have to uninstall that first.
          The Windows installer will ask you to confirm installation of an app from an unknown developer.
          The macOS DMG makes it even harder with a multi-step dance that requires opening the Privacy & Security settings in the System Preferences and explicitly confirming that you are willing to install this app.

          You can find similar Subsurface-Daily builds for [Ubuntu](https://ppa.launchpadcontent.net/subsurface) and Subsurface-test for [Fedora](https://copr.fedorainfracloud.org/coprs/dirkhh/Subsurface-test).

          Please report any issues with these builds in the [Subsurface user forum](https://groups.google.com/g/subsurface-divelog).
